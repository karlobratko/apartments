@using Apartments.WebUI.ViewModels
@model RegisterViewModel

@{
  Page.Title = Apartments.ResourceManager.GetString(name: "register");
}

<div class="row d-flex justify-content-center align-items-center">
  <div class="col-4 px-5">
    <h2 class="mb-4 h2 text-center">@Apartments.ResourceManager.GetString(name: "register")</h2>

    @using (Html.BeginForm(actionName: "Register",
                           controllerName: "Account",
                           method: FormMethod.Post)) {
      @Html.AntiForgeryToken()

      <div class="mb-3">
        @Html.LabelFor(expression: model => model.FName, htmlAttributes: new { @class = "form-label" })
        @Html.TextBoxFor(expression: model => model.FName, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(expression: model => model.FName)
      </div>
      <div class="mb-3">
        @Html.LabelFor(expression: model => model.LName, htmlAttributes: new { @class = "form-label" })
        @Html.TextBoxFor(expression: model => model.LName, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(expression: model => model.LName)
      </div>
      <div class="mb-3">
        @Html.LabelFor(expression: model => model.Email, htmlAttributes: new { @class = "form-label" })
        @Html.TextBoxFor(expression: model => model.Email, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(expression: model => model.Email)
      </div>
      <div class="mb-3">
        @Html.LabelFor(expression: model => model.Username, htmlAttributes: new { @class = "form-label" })
        @Html.TextBoxFor(expression: model => model.Username, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(expression: model => model.Username)
      </div>
      <div class="mb-3">
        @Html.LabelFor(expression: model => model.Password, htmlAttributes: new { @class = "form-label" })
        @Html.PasswordFor(expression: model => model.Password, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(expression: model => model.Password)
      </div>
      <div class="mb-3">
        @Html.LabelFor(expression: model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label" })
        @Html.PasswordFor(expression: model => model.ConfirmPassword, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(expression: model => model.ConfirmPassword)
      </div>

      <div class="d-flex justify-content-end">
        @Html.ActionLink(linkText: Apartments.ResourceManager.GetString(name: "cancel"),
                         actionName: "Index",
                         controllerName: "Home",
                         routeValues: null,
                         htmlAttributes: new {
                           @class = "btn btn-outline-secondary me-3"
                         })
        <button type="submit" class="btn btn-dark">@Apartments.ResourceManager.GetString(name: "register")</button>
      </div>
    }

    <div class="text-center mt-5">
      <span class="text-secondary">@Apartments.ResourceManager.GetString(name: "login-question")</span>
      @Html.ActionLink(linkText: Apartments.ResourceManager.GetString(name: "login"),
                         actionName: "Login",
                         controllerName: "Account",
                         routeValues: null,
                         htmlAttributes: new {
                           @class = "link-dark ms-2"
                         })
    </div>
  </div>
</div>

@section scripts{
  @Scripts.Render("~/Scripts/jqval")
}